Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("ac,bjci->bjai", extract_mat(F, "vv", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("bc,aicj->bjai", extract_mat(F, "vv", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("ki,akbj->bjai", extract_mat(F, "oo", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("kj,aibk->bjai", extract_mat(F, "oo", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("aibc,cj->bjai", extract_mat(g, "vovv", o, v), extract_mat(s, "AIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("aikj,bk->bjai", extract_mat(g, "vooo", o, v), extract_mat(s, "AIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("acbj,ci->bjai", extract_mat(g, "vvvo", o, v), extract_mat(s, "AIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("bjki,ak->bjai", extract_mat(g, "vooo", o, v), extract_mat(s, "AIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("Bai,Bbj->bjai", extract_mat(g_p, "AVvo", o, v), extract_mat(s, "VIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("Bbj,Bai->bjai", extract_mat(g_p, "AVvo", o, v), extract_mat(s, "VIvo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("ac,bjci->bjai", extract_mat(g_p, "AIvv", o, v), extract_mat(t, "vovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("bc,aicj->bjai", extract_mat(g_p, "AIvv", o, v), extract_mat(t, "vovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("ki,akbj->bjai", extract_mat(g_p, "AIoo", o, v), extract_mat(t, "vovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("kj,aibk->bjai", extract_mat(g_p, "AIoo", o, v), extract_mat(t, "vovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("B,Baibj->bjai", extract_mat(h_p, "AV", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("aikc,bjck->bjai", extract_mat(L, "voov", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("bjkc,aick->bjai", extract_mat(L, "voov", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("aikc,bkcj->bjai", extract_mat(g, "voov", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("acbd,cidj->bjai", extract_mat(g, "vvvv", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("ackj,bkci->bjai", extract_mat(g, "vvoo", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("bjkc,akci->bjai", extract_mat(g, "voov", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("bcki,akcj->bjai", extract_mat(g, "vvoo", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("kilj,akbl->bjai", extract_mat(g, "oooo", o, v), extract_mat(s2, "AIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("Bac,Bbjci->bjai", extract_mat(g_p, "AVvv", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -0.50000000  * np.einsum("Bbc,Baicj->bjai", extract_mat(g_p, "AVvv", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("Bki,Bakbj->bjai", extract_mat(g_p, "AVoo", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  +0.50000000  * np.einsum("Bkj,Baibk->bjai", extract_mat(g_p, "AVoo", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
Omega_AIaibj_bjai[:,:,:,:] = Omega_AIaibj_bjai[:,:,:,:] .+  -1.00000000  * np.einsum("Bkk,Baibj->bjai", extract_mat(g_p, "AVoo", o, v), extract_mat(s2, "VIvovo", o, v), optimize="optimal");
